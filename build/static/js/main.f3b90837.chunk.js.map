{"version":3,"sources":["reportWebVitals.ts","helpers/localStore.ts","store/types.ts","store/actions.ts","components/FormNote.tsx","components/FormToDo.tsx","components/Burger.tsx","components/Nav.tsx","components/UserInterface.tsx","helpers/saveLineBreakTabs.tsx","components/Notes.tsx","components/ToDoList.tsx","components/About.tsx","App.tsx","store/reducers.ts","store/store.ts","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","key","localStore","localStorage","getItem","JSON","parse","newStore","setItem","stringify","CREATE_NOTE","DELETE_NOTE","CREATE_TODO","COMPLETE_TODO","DELETE_TODO","CHANGE_VALUES_FORM","CHANGE_OPENNESS_FORM","CHANGE_ACTIVE_BURGER","changeValuesForm","values","type","payload","changeOpennessForm","isOpen","changeActiveBurger","isActive","mapDispatchToProps","createNote","note","connect","state","UI","form","isOpenForm","notes","title","content","isSaveLineBreakTabs","checkboxId","generate","changeHandler","event","target","name","value","checked","FormNoteStyled","isFocusInput","onSubmit","preventDefault","trim","newNote","placeholder","onChange","htmlFor","className","id","BtnOpenForm","onClick","styled","button","createTodo","todo","todos","FormTodoStyled","newTodo","isComplete","isActiveBurger","BurgerMenuStyled","SpanStyled","span","div","handleClick","NavStyled","item","path","map","NavItem","to","li","ul","UserInterface","UserInterfaceStyled","component","FormNote","exact","FormToDo","saveLineBreakTabs","contentSLBWS","split","length","line","i","words","word","deleteNote","handleDelete","filter","Content","NoteStyled","BtnDelNote","deleteTodo","completeTodo","TodoStyled","CompleteCheckbox","TitleStyled","input","h2","About","AboutStyled","InfoStyled","p","App","AppStyled","SwitchStyled","Notes","ToDoList","Switch","localNotes","localTodos","initialState","rootReducer","combineReducers","action","store","createStore","composeWithDevTools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8LAceA,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,mECPC,WACTQ,GACF,IAAMC,EAA4BC,aAAaC,QAAQH,GAGvD,OADwBC,GAAcG,KAAKC,MAAMJ,IAJtC,WAQTD,EAAaM,GACf,OAAOJ,aAAaK,QAAQP,EAAKI,KAAKI,UAAUF,KCXvCG,EAAc,cACdC,EAAc,cACdC,EAAc,cACdC,EAAgB,gBAChBC,EAAc,cAEdC,EAAqB,qBACrBC,EAAuB,uBAEvBC,EAAuB,uBC8CvBC,EAAmB,SAACC,GAC/B,MAAO,CACLC,KAAML,EACNM,QAASF,IAGAG,EAAqB,SAACC,GACjC,MAAO,CACLH,KAAMJ,EACNK,QAASE,IAGAC,EAAqB,SAACC,GACjC,MAAO,CACLL,KAAMH,EACNI,QAASI,I,qpDCnDb,IAoFMC,EAAqB,CACzBR,mBACAI,qBACAK,WDpFwB,SAACC,GACzB,MAAO,CACLR,KAAMV,EACNW,QAASO,KCoFEC,eAXS,SAAEC,GAAF,MAAwB,CAC9CX,OAAQW,EAAMC,GAAGA,GAAGC,KAAKb,OACzBc,WAAYH,EAAMC,GAAGA,GAAGC,KAAKC,WAC7BC,MAAOJ,EAAMI,MAAMA,SAQoBR,EAA1BG,EA1F2B,SAAC,GAOpC,IANLV,EAMI,EANJA,OACAc,EAKI,EALJA,WACAC,EAII,EAJJA,MACAhB,EAGI,EAHJA,iBACAI,EAEI,EAFJA,mBACAK,EACI,EADJA,WAEQQ,EAAwChB,EAAxCgB,MAAOC,EAAiCjB,EAAjCiB,QAASC,EAAwBlB,EAAxBkB,oBAGlBC,EAAaC,qBAcbC,EAAgB,SAACC,GAA4E,IAAD,EAC7CA,EAA3CC,OAAUC,EAD8E,EAC9EA,KAAMC,EADwE,EACxEA,MAAOxB,EADiE,EACjEA,KAAMyB,EAD2D,EAC3DA,QACrC3B,EAAiB,2BACZC,GADW,kBAEbwB,EAAgB,aAATvB,EAAsByB,EAAUD,MAQ5C,OACE,qCACE,eAACE,EAAD,CACEC,cA9Be,EA+BfC,SA5BgB,SAACP,GAErB,GADAA,EAAMQ,iBACDd,EAAMe,OAAX,CACA,IAAMC,EAAU,CAAEhB,QAAOC,UAASC,sBAAqBpC,IAAKsC,sBAE5DZ,EAAWwB,GACXjC,EAAiB,2BAAKC,GAAN,IAAcgB,MAAO,GAAIC,QAAS,MAClDd,GAAoBW,GAEpB/B,EAAe,UAAf,sBAA+BgC,GAA/B,CAAsCiB,OAoBlC5B,OAAQU,EAHV,UAKE,iDACA,uBACEmB,YAAY,QACZhC,KAAK,OACLuB,KAAK,QACLC,MAAOT,EACPkB,SAAUb,IAEZ,0BACEY,YAAY,UAEZT,KAAK,UACLC,MAAOR,EACPiB,SAAUb,IAEZ,wBAAOc,QAAShB,EAAYiB,UAAU,yBAAtC,UACE,uBACEA,UAAU,yBACVnC,KAAK,WACLuB,KAAK,sBACLE,QAASR,EACTgB,SAAUb,EACVgB,GAAIlB,IAPR,+BAWA,wBAAQlB,KAAK,SAAb,uBAEF,cAACqC,EAAD,CAAaC,QAvCiB,WAChCpC,GAAoBW,IAsClB,SACE,sBAAMsB,UAAU,kBAAhB,0CAqBFE,EAAcE,IAAOC,OAAV,KA0BXd,EAAiBa,IAAO3B,KAAV,KAKR,qBAAET,OAAqB,oBAAqB,SAC3C,qBAAEA,OAAqB,YAAa,aAM3CkC,GACkB,qBAAElC,OAAqB,UAAa,aAC9C,qBAAEwB,aAAiC,MAAS,UAKvC,gBAAExB,EAAF,EAAEA,OAAQwB,EAAV,EAAUA,aAAV,OACXxB,EAASwB,EAAe,yCACxB,yCAA2C,6BAGhC,gBAAExB,EAAF,EAAEA,OAAQwB,EAAV,EAAUA,aAAV,OACXxB,EAASwB,EAAe,uCACxB,wCAA0C,2CAepC,qBAAEA,aAAiC,oBAAqB,wB,wwCChKtE,IA0DMrB,EAAqB,CACzBR,mBACAI,qBACAuC,WF9CwB,SAACC,GACzB,MAAO,CACL1C,KAAMR,EACNS,QAASyC,KE8CEjC,eAXS,SAAEC,GAAF,MAAwB,CAC9CX,OAAQW,EAAMC,GAAGA,GAAGC,KAAKb,OACzBc,WAAYH,EAAMC,GAAGA,GAAGC,KAAKC,WAC7B8B,MAAOjC,EAAMiC,MAAMA,SAQoBrC,EAA1BG,EAhE2B,SAAC,GAOpC,IANLV,EAMI,EANJA,OACAc,EAKI,EALJA,WACA8B,EAII,EAJJA,MACA7C,EAGI,EAHJA,iBACAI,EAEI,EAFJA,mBACAuC,EACI,EADJA,WAEQ1B,EAAUhB,EAAVgB,MAsBR,OACE,qCACE,eAAC6B,EAAD,CACEhB,SAvBgB,SAACP,GAErB,GADAA,EAAMQ,iBACDd,EAAMe,OAAX,CACA,IAAMe,EAAU,CAAE9B,QAAO+B,YAAY,EAAOjE,IAAKsC,sBAEjDsB,EAAWI,GACX/C,EAAiB,2BAAIC,GAAL,IAAagB,MAAO,MACpCb,GAAoBW,GAEpB/B,EAAe,UAAf,sBAA+B6D,GAA/B,CAAsCE,OAelC1C,OAAQU,EAFV,UAIE,iDACA,uBACEmB,YAAY,QACZhC,KAAK,OACLuB,KAAK,QACLC,MAAOT,EACPkB,SApBc,SAACZ,GACrBvB,EAAiB,2BAAIC,GAAL,IAAagB,MAAOM,EAAMC,OAAOE,YAqB7C,wBAAQxB,KAAK,SAAb,uBAEF,cAAC,EAAD,CAAasC,QApBiB,WAChCpC,GAAoBW,IAmBlB,SACE,sBAAMsB,UAAU,kBAAhB,0CAqBFE,EAAcE,IAAOC,OAAV,KA0BXI,EAAiBL,IAAO3B,KAAV,KAKR,qBAAET,OAAqB,QAAS,SAC/B,qBAAEA,OAAqB,YAAa,aAM3CkC,GACkB,qBAAElC,OAAqB,UAAa,aAMzC,qBAAEA,OAAqB,yCAA2C,6BAGlE,qBAAEA,OAAqB,wCAA0C,2C,y4BC1HpF,IAkBMG,EAAqB,CACzBF,sBAGaK,eAPS,SAAEC,GAAF,MAAwB,CAC9CqC,eAAgBrC,EAAMC,GAAGA,GAAGoC,kBAMUzC,EAAzBG,EAtBuB,SAAC,GAA2C,IAAzCsC,EAAwC,EAAxCA,eAAgB3C,EAAwB,EAAxBA,mBAMvD,OACE,eAAC4C,EAAD,CAAkB3C,SAAU0C,EAAgBT,QALzB,WACnBlC,GAAoB2C,IAIpB,UACE,cAACE,EAAD,GAAiB,GACjB,cAACA,EAAD,GAAiB,GACjB,cAACA,EAAD,GAAiB,SAejBA,EAAaV,IAAOW,KAAV,KAWVF,EAAmBT,IAAOY,IAAV,KAGb,qBAAE9C,SAAyB,OAAU,SAS/B,qBAAEA,SACf,oCAAuC,sCACzB,qBAAEA,SAChB,qCAAwC,uCACrC4C,GAGU,qBAAE5C,SAAyB,OAAU,UACtC,qBAAEA,SAAyB,OAAU,SACtC,qBAAEA,SAAyB,OAAU,SAC/B,qBAAEA,SAAyB,gBAAmB,kBAE7C,qBAAEA,SACpB,qCAAwC,wCAG7B,qBAAEA,SAAyB,QAAW,SAChC,qBAAEA,SAAyB,iBAAoB,kB,oqCCjElE,IA6BeI,eAJS,SAAEC,GAAF,MAAwB,CAC9CqC,eAAgBrC,EAAMC,GAAGA,GAAGoC,kBAGU,CAAC3C,sBAA1BK,EA7BiB,SAAC,GAA4C,IAA1CsC,EAAyC,EAAzCA,eAAgB3C,EAAyB,EAAzBA,mBAQ3CgD,EAAc,WAClBhD,GAAoB2C,IAGtB,OACE,cAACM,EAAD,CAAWhD,SAAU0C,EAArB,SAXe,CACf,CAACO,KAAM,QAASC,KAAM,IAAK1E,IAAK,GAChC,CAACyE,KAAM,WAAYC,KAAM,QAAS1E,IAAK,GACvC,CAACyE,KAAM,QAASC,KAAM,SAAU1E,IAAK,IAUxB2E,KAAI,gBAAGF,EAAH,EAAGA,KAAMC,EAAT,EAASA,KAAM1E,EAAf,EAAeA,IAAf,OACX,cAAC4E,EAAD,CAAUnB,QAASc,EAAnB,SACE,cAAC,IAAD,CAASM,GAAIH,EAAb,SAAsBD,KADazE,WAgBzC4E,EAAUlB,IAAOoB,GAAV,KAiCPN,EAAYd,IAAOqB,GAAV,KAMH,qBAAEvD,SAAyB,oBAAqB,SAC/C,qBAAEA,SAAyB,aAAc,cAGtC,qBAAEA,SAChB,gBAAmB,kBAIfoD,GACW,qBAAEpD,SAAyB,eAAgB,mBACvC,qBAAEA,SAAyB,OAAQ,SAC3C,qBAAEA,SAAyB,MAAO,yBAC9B,qBAAEA,SAAyB,OAAQ,SACvC,qBAAEA,SAAyB,QAAS,UACnC,qBAAEA,SAAyB,OAAQ,SAC9B,qBAAEA,SAAyB,OAAQ,SACpC,qBAAEA,SAAyB,gBAAmB,mBAGnD,qBAAEA,SAAyB,OAAQ,SAC5B,qBAAEA,SAAyB,gBAAmB,mB,yMCjGlE,IAUewD,GAViB,kBAC9B,eAACC,GAAD,WACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,UAAWC,EAAUT,KAAK,IAAIU,OAAK,IAC1C,cAAC,IAAD,CAAOF,UAAWG,EAAUX,KAAK,iBAMjCO,GAAsBvB,IAAOY,IAAV,MCMVgB,GAvB4F,SAAEnD,EAAiBC,GAC5H,GAAIA,EAAqB,CACvB,IAAMmD,EAAepD,EAAQqD,MAAM,MACnC,OAAID,EAAaE,OAAS,EAAU,4BAAItD,IACjCoD,EAAaZ,KAAI,SAACe,EAAMC,GAC7B,IAAMC,EAAQF,EAAKF,MAAM,MACnBxF,EAAMsC,qBACZ,OACE,4BACGsD,EAAMjB,KAAI,SAACkB,GAAD,OACT,iCACGA,EACD,2CAFSvD,0BAFPtC,MAYd,OAAO,4BAAImC,K,8yCCRb,IA0CMV,GAAqB,CACzBqE,WP/BwB,SAAC9F,GACzB,MAAO,CACLmB,KAAMT,EACNU,QAASpB,KO+BE4B,gBAPS,SAAEC,GAAF,MAAwB,CAC9CI,MAAOJ,EAAMI,MAAMA,SAMmBR,GAAzBG,EA9CqB,SAAC,GAA2B,IAAzBK,EAAwB,EAAxBA,MAAO6D,EAAiB,EAAjBA,WAEtCC,EAAe,SAAC/F,GAAD,OAAiB,WACpC8F,EAAW9F,GACXC,EAAe,UAAW,YAAIgC,GAAO+D,QAAO,SAACrE,GAAD,OAAiBA,EAAK3B,MAAQA,QAGtEiG,EAAU,SAAC,GAAD,IAAE9D,EAAF,EAAEA,QAASC,EAAX,EAAWA,oBAAX,OACd,mCACIkD,GAAmBnD,EAASC,MAIlC,OACE,sCACIH,EAAMwD,QACN,eAACS,GAAD,WACE,0CACA,+DAIHjE,EAAM0C,KACL,gBACEzC,EADF,EACEA,MACAC,EAFF,EAEEA,QACAnC,EAHF,EAGEA,IACAoC,EAJF,EAIEA,oBAJF,OAME,eAAC8D,GAAD,WACE,6BAAKhE,IACL,cAAC+D,EAAD,CAAS9D,QAASA,EAASC,oBAAqBA,IAChD,cAAC+D,GAAD,CAAY1C,QAASsC,EAAa/F,OAHnBA,YAoBrBkG,GAAaxC,IAAOY,IAAV,MAiCV6B,GAAazC,IAAOC,OAAV,M,s5CClFhB,IA6CMlC,GAAqB,CACzB2E,WRdwB,SAACpG,GACzB,MAAO,CACLmB,KAAMN,EACNO,QAASpB,IQYXqG,aRtB0B,SAACrG,GAC3B,MAAO,CACLmB,KAAMP,EACNQ,QAASpB,KQsBE4B,gBARS,SAAEC,GAAF,MAAwB,CAC9CiC,MAAOjC,EAAMiC,MAAMA,SAOmBrC,GAAzBG,EAlDwB,SAAC,GAAyC,IAAvCkC,EAAsC,EAAtCA,MAAOsC,EAA+B,EAA/BA,WAAYC,EAAmB,EAAnBA,aAErD9D,EAAgB,SAACvC,GAAD,OAAiB,WACrCqG,EAAarG,GACbC,EAAe,UAAW,YAAI6D,GAAOa,KAAI,SAACd,GAAD,OAAiBA,EAAK7D,MAAQA,EAAb,2BAAwB6D,GAAxB,IAA8BI,YAAaJ,EAAKI,aAAeJ,QAGrHkC,EAAe,SAAC/F,GAAD,OAAiB,WACpCoG,EAAWpG,GACXC,EAAe,UAAW,YAAI6D,GAAOkC,QAAO,SAACnC,GAAD,OAAiBA,EAAK7D,MAAQA,QAG5E,OACE,sCACI8D,EAAM2B,QACN,eAACa,GAAD,WACE,0CACA,+DAIHxC,EAAMa,KACL,gBACEzC,EADF,EACEA,MACAlC,EAFF,EAEEA,IACAiE,EAHF,EAGEA,WAHF,OAKE,eAACqC,GAAD,CAAYrC,WAAYA,EAAxB,UACE,cAACsC,GAAD,CACEpF,KAAK,WACLuB,KAAK,aACLE,QAASqB,EACTb,SAAUb,EAAcvC,KAE1B,eAACwG,GAAD,eAAetE,EAAf,OACA,cAAC,GAAD,CAAYuB,QAASsC,EAAa/F,OARKA,YAyB7CuG,GAAmB7C,IAAO+C,MAAV,MAQhBD,GAAc9C,IAAOgD,GAAV,MAEXJ,GAAa5C,IAAOY,IAAV,KASVkC,IACiB,qBAAEvC,WAA6B,eAAiB,UAM1D,qBAAEA,WAA6B,qBAAuB,wBAU7DkC,GAAazC,IAAOC,OAAV,M,6aCrGhB,IAOegD,GAPS,kBACtB,eAACC,GAAD,WACE,cAACC,GAAD,4CACA,cAACA,GAAD,4CACA,cAACA,GAAD,gDAKEA,GAAanD,IAAOoD,EAAV,MAWVF,GAAclD,IAAOY,IAAV,M,ufCbjB,IAiBeyC,GAjBO,WAEpB,OACE,cAAC,IAAD,UACE,eAACC,GAAD,WACE,cAAC,GAAD,IAEA,eAACC,GAAD,WACI,cAAC,IAAD,CAAO/B,UAAWgC,GAAOxC,KAAK,IAAIU,OAAK,IACvC,cAAC,IAAD,CAAOF,UAAWiC,GAAUzC,KAAK,UACjC,cAAC,IAAD,CAAOQ,UAAWyB,GAAOjC,KAAK,oBASpCsC,GAAYtD,IAAOY,IAAV,MAaT2C,GAAevD,YAAO0D,IAAP1D,CAAH,M,kBC7BZ2D,GAAapH,EAAe,YAAc,GAC1CqH,GAAarH,EAAe,YAAc,GAE1CsH,GAA6B,CACjCzF,GAAI,CACFoC,gBAAgB,EAChBnC,KAAM,CACJb,OAAQ,CACNgB,MAAO,GACPC,QAAS,GACTC,qBAAqB,GAEvBJ,YAAY,IAGhBC,MAAM,YAAKoF,IACXvD,MAAM,YAAKwD,KCtBPE,GAAcC,2BAAgB,CAClCxF,MDwB0B,WAA4E,IAA3EJ,EAA0E,uDAApD0F,GAAcG,EAAsC,uCACrG,OAAQA,EAAOvG,MACb,KAAKV,EACH,OAAO,2BAAKoB,GAAZ,IAAmBI,MAAM,GAAD,mBAAMJ,EAAMI,OAAZ,CAAmByF,EAAOtG,YACpD,KAAKV,EACH,OAAO,2BAAKmB,GAAZ,IAAmBI,MAAO,YAAIJ,EAAMI,OAAQ+D,QAAO,SAACrE,GAAD,OAAiBA,EAAK3B,MAAQ0H,EAAOtG,aAC1F,QACE,OAAOS,IC9BXiC,MDiC0B,WAA4E,IAA3EjC,EAA0E,uDAApD0F,GAAcG,EAAsC,uCACrG,OAAQA,EAAOvG,MACb,KAAKR,EACH,OAAO,2BAAKkB,GAAZ,IAAmBiC,MAAM,GAAD,mBAAMjC,EAAMiC,OAAZ,CAAmB4D,EAAOtG,YACpD,KAAKR,EACH,OAAO,2BAAKiB,GAAZ,IAAmBiC,MAAO,YAAIjC,EAAMiC,OAAQa,KAAI,SAACd,GAAD,OAAiBA,EAAK7D,MAAQ0H,EAAOtG,QAApB,2BAAmCyC,GAAnC,IAAyCI,YAAaJ,EAAKI,aAAeJ,OAC7I,KAAKhD,EACH,OAAO,2BAAKgB,GAAZ,IAAmBiC,MAAO,YAAIjC,EAAMiC,OAAQkC,QAAO,SAACnC,GAAD,OAAiBA,EAAK7D,MAAQ0H,EAAOtG,aAC1F,QACE,OAAOS,ICzCXC,GD4CuB,WAA0E,IAAzED,EAAwE,uDAAlD0F,GAAcG,EAAoC,uCAChG,OAAQA,EAAOvG,MACb,KAAKL,EACH,OAAO,2BAAKe,GAAZ,IAAmBC,GAAG,2BAAMD,EAAMC,IAAb,IAAiBC,KAAK,2BAAMF,EAAMC,GAAGC,MAAhB,IAAsBb,OAAQwG,EAAOtG,cACjF,KAAKL,EACH,OAAO,2BAAKc,GAAZ,IAAmBC,GAAG,2BAAMD,EAAMC,IAAb,IAAiBC,KAAK,2BAAMF,EAAMC,GAAGC,MAAhB,IAAsBC,WAAY0F,EAAOtG,cACrF,KAAKJ,EACH,OAAO,2BAAKa,GAAZ,IAAmBC,GAAG,2BAAMD,EAAMC,IAAb,IAAiBoC,eAAgBwD,EAAOtG,YAC/D,QACE,OAAOS,MC9CE8F,GAFDC,uBAAYJ,GAAaK,kCCLvCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUL,MAAOA,GAAjB,SACE,cAAC,GAAD,QAGJM,SAASC,eAAe,SAG1B3I,M","file":"static/js/main.f3b90837.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { INote, ITodo } from '../interfaces/interfaces';\r\n\r\nexport default {\r\n  get(key: string): [] | null {\r\n    const localStore: string | null = localStorage.getItem(key);\r\n\r\n    const parseLocalStore = localStore && JSON.parse(localStore);\r\n    return parseLocalStore;\r\n  },\r\n\r\n  set(key: string, newStore: INote[] | ITodo[]): void | null {\r\n    return localStorage.setItem(key, JSON.stringify(newStore));  \r\n  }\r\n};","export const CREATE_NOTE = 'CREATE_NOTE';\r\nexport const DELETE_NOTE = 'DELETE_NOTE';\r\nexport const CREATE_TODO = 'CREATE_TODO';\r\nexport const COMPLETE_TODO = 'COMPLETE_TODO';\r\nexport const DELETE_TODO = 'DELETE_TODO';\r\n\r\nexport const CHANGE_VALUES_FORM = 'CHANGE_VALUES_FORM';\r\nexport const CHANGE_OPENNESS_FORM = 'CHANGE_OPENNESS_FORM';\r\n\r\nexport const CHANGE_ACTIVE_BURGER = 'CHANGE_ACTIVE_BURGER';\r\n\r\n\r\n","import { \r\n  CREATE_NOTE, \r\n  DELETE_NOTE, \r\n  CHANGE_ACTIVE_BURGER,  \r\n  CHANGE_VALUES_FORM,\r\n  CREATE_TODO,\r\n  DELETE_TODO,\r\n  CHANGE_OPENNESS_FORM,\r\n  COMPLETE_TODO} from '../store/types';\r\nimport { \r\n  ChangeActiveBurger,\r\n  CreateNote, \r\n  DeleteNote, \r\n  INote, \r\n  IFormValues,\r\n  ChangeValuesForm,\r\n  CreateTodo,\r\n  DeleteTodo,\r\n  ITodo,\r\n  ChangeOpennessForm,\r\n  CompleteTodo} from '../interfaces/interfaces';\r\n\r\nexport const createNote = (note: INote): CreateNote => {\r\n  return {\r\n    type: CREATE_NOTE,\r\n    payload: note,\r\n  };\r\n};\r\nexport const deleteNote = (key: string): DeleteNote => {\r\n  return {\r\n    type: DELETE_NOTE,\r\n    payload: key,\r\n  };\r\n};\r\n\r\nexport const createTodo = (todo: ITodo): CreateTodo => {\r\n  return {\r\n    type: CREATE_TODO,\r\n    payload: todo,\r\n  };\r\n};\r\nexport const completeTodo = (key: string): CompleteTodo => {\r\n  return {\r\n    type: COMPLETE_TODO,\r\n    payload: key,\r\n  };\r\n};\r\n\r\nexport const deleteTodo = (key: string): DeleteTodo => {\r\n  return {\r\n    type: DELETE_TODO,\r\n    payload: key,\r\n  };\r\n};\r\n\r\nexport const changeValuesForm = (values: IFormValues): ChangeValuesForm => {\r\n  return {\r\n    type: CHANGE_VALUES_FORM,\r\n    payload: values,\r\n  };\r\n};\r\nexport const changeOpennessForm = (isOpen: boolean): ChangeOpennessForm => {\r\n  return {\r\n    type: CHANGE_OPENNESS_FORM,\r\n    payload: isOpen,\r\n  };\r\n};\r\nexport const changeActiveBurger = (isActive: boolean): ChangeActiveBurger => {\r\n  return {\r\n    type: CHANGE_ACTIVE_BURGER,\r\n    payload: isActive,\r\n  };\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { generate } from 'shortid';\r\nimport styled from 'styled-components';\r\n\r\n// import { animRotateAfter, animRotateBefore } from '../helpers/animations'\r\nimport { AppStore } from '../store/store';\r\nimport localStore from '../helpers/localStore';\r\nimport { createNote, changeValuesForm, changeOpennessForm } from '../store/actions';\r\nimport { ChangeOpennessForm, ChangeValuesForm, CreateNote, IFormValues, INote } from '../interfaces/interfaces';\r\ninterface FormNoteProps {\r\n  values: IFormValues, \r\n  isOpenForm: boolean,\r\n  notes: INote[],\r\n  changeValuesForm: (values: IFormValues) => ChangeValuesForm, \r\n  changeOpennessForm: (isOpenForm: boolean) => ChangeOpennessForm, \r\n  createNote: (note: INote) => CreateNote;\r\n}\r\n\r\nconst FormNote: React.FC<FormNoteProps> = ({ \r\n  values, \r\n  isOpenForm,\r\n  notes,\r\n  changeValuesForm, \r\n  changeOpennessForm, \r\n  createNote,\r\n}) => {\r\n  const { title, content, isSaveLineBreakTabs } = values;\r\n  \r\n  const isFocusInput = false;\r\n  const checkboxId = generate();\r\n\r\n  const submitHandler = (event: React.FormEvent<HTMLFormElement>): void => {\r\n    event.preventDefault();\r\n    if (!title.trim()) return;\r\n    const newNote = { title, content, isSaveLineBreakTabs, key: generate() };\r\n\r\n    createNote(newNote);\r\n    changeValuesForm({ ...values, title: '', content: '' });\r\n    changeOpennessForm(!isOpenForm);\r\n\r\n    localStore.set('myNotes', [ ...notes, newNote]);\r\n  };\r\n\r\n  const changeHandler = (event: React.ChangeEvent<HTMLInputElement & HTMLTextAreaElement>): void => {\r\n    const { target: { name, value, type, checked } } = event;\r\n    changeValuesForm({\r\n      ...values,\r\n      [name]: type === 'checkbox' ? checked : value,\r\n    });\r\n  };\r\n\r\n  const changeOpennessFormHandler = () => {\r\n    changeOpennessForm(!isOpenForm);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <FormNoteStyled\r\n        isFocusInput={isFocusInput}\r\n        onSubmit={submitHandler}\r\n        isOpen={isOpenForm}\r\n      >\r\n        <h2>Create new note</h2>\r\n        <input \r\n          placeholder=\"Title\"\r\n          type=\"text\" \r\n          name=\"title\"\r\n          value={title}\r\n          onChange={changeHandler}\r\n        />\r\n        <textarea\r\n          placeholder=\"Content\"\r\n          // type=\"text\"\r\n          name=\"content\"\r\n          value={content}\r\n          onChange={changeHandler}\r\n        />\r\n        <label htmlFor={checkboxId} className=\"labelSaveLineBreakTabs\">\r\n          <input \r\n            className=\"checkSaveLineBreakTabs\" \r\n            type=\"checkbox\" \r\n            name=\"isSaveLineBreakTabs\" \r\n            checked={isSaveLineBreakTabs}\r\n            onChange={changeHandler}\r\n            id={checkboxId}\r\n          />\r\n          Save line breaks and tabs\r\n        </label>\r\n        <button type=\"submit\">submit</button>\r\n      </FormNoteStyled>\r\n      <BtnOpenForm onClick={changeOpennessFormHandler} >\r\n        <span className=\"visually-hidden\">Button for open form</span>\r\n      </BtnOpenForm>     \r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ( state: AppStore ) => ({\r\n  values: state.UI.UI.form.values,\r\n  isOpenForm: state.UI.UI.form.isOpenForm,\r\n  notes: state.notes.notes,\r\n});\r\nconst mapDispatchToProps = {\r\n  changeValuesForm,\r\n  changeOpennessForm,\r\n  createNote\r\n};\r\n\r\nexport default connect( mapStateToProps, mapDispatchToProps )(FormNote);\r\n\r\n\r\n\r\nconst BtnOpenForm = styled.button`\r\n  position: fixed;\r\n  z-index: 6;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  width: 50px;\r\n  height: 50px;  \r\n  background: #61c7b9;\r\n  cursor: pointer;\r\n  &:active {\r\n    background: #49a094;\r\n  }\r\n  &::before, \r\n  &::after {\r\n    content: '';\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    width: 4px;\r\n    border-radius: 5px;\r\n    height: 25px;\r\n    background-color: #000;\r\n    transition: all 0.3s;\r\n  }\r\n`;\r\n\r\nconst FormNoteStyled = styled.form<{ isOpen: boolean, isFocusInput: boolean }>`\r\n  width: 100%;\r\n  bottom: 60px;\r\n  left: 0px;\r\n  position: fixed;\r\n  height: ${({isOpen}) => isOpen ? 'calc(100% - 60px)': '0px'};\r\n  padding: ${({isOpen}) => isOpen ? '20px 20px': '0px 20px'};\r\n  overflow: hidden;\r\n  background-color: #61c7b9;\r\n  transition: all 0.3s;\r\n  font-size: 20px;\r\n  font-family: serif;\r\n  &+${BtnOpenForm} {\r\n    border: 1px solid ${({isOpen}) => isOpen ? '#49a094'  : '#61c7b9'};\r\n    bottom: ${({isFocusInput}) => isFocusInput ? '5px'  : '39px'};\r\n    border-top: none;\r\n    border-bottom-width: 2px;\r\n    border-radius: 50%;\r\n    &::before {\r\n      transform: ${({isOpen, isFocusInput}) => \r\n        isOpen ? isFocusInput ? 'translate( -9px, -35% ) rotate(-45deg)' : \r\n        'translate( -50%, -50% ) rotate(-45deg)' : 'translate( -50%, -50% )'};\r\n    }\r\n    &::after {\r\n      transform: ${({isOpen, isFocusInput}) => \r\n        isOpen ? isFocusInput ? 'translate( 6px, -35% ) rotate(45deg)' : \r\n        'translate( -50%, -50% ) rotate(45deg)' : 'translate( -50%, -50% ) rotate(90deg)'};\r\n    }\r\n  }\r\n  & input,\r\n  & textarea,\r\n  & button {\r\n    border-radius: 3px;\r\n    width: calc(100% - 10px);\r\n    padding: 10px;\r\n  }\r\n  & input {\r\n    height: 40px;\r\n    margin-bottom: 15px;\r\n  }\r\n  & textarea {\r\n    height: ${({isFocusInput}) => isFocusInput ? 'calc(100% - 35px)': 'calc(100% - 185px)'};\r\n    height: calc(100% - 195px);\r\n    min-height: 200px;\r\n    margin-bottom: 12px;    \r\n  }\r\n  & button {\r\n\r\n  }\r\n  & h2 {\r\n    font-size: 24px;\r\n    text-align: center;\r\n    margin-bottom: 10px;\r\n  }\r\n  & .checkSaveLineBreakTabs {\r\n    width: 22px;\r\n    height: 22px;\r\n    margin: 0 15px 14px 0;\r\n    position: relative;\r\n    top: 4px;\r\n  }\r\n  & .labelSaveLineBreakTabs {\r\n    font-size: 20px;\r\n    position: relative;\r\n    top: -4px;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { generate } from 'shortid';\r\nimport styled from 'styled-components';\r\n\r\n// import { animRotateAfter, animRotateBefore } from '../helpers/animations'\r\nimport { AppStore } from '../store/store';\r\nimport localStore from '../helpers/localStore';\r\nimport { createTodo, changeValuesForm, changeOpennessForm } from '../store/actions';\r\nimport { ChangeOpennessForm, ChangeValuesForm, CreateTodo, IFormValues, ITodo } from '../interfaces/interfaces';\r\n\r\ninterface FormTodoProps {\r\n  values: IFormValues, \r\n  isOpenForm: boolean,\r\n  todos: ITodo[],\r\n  changeValuesForm: (values: IFormValues) => ChangeValuesForm, \r\n  changeOpennessForm: (isOpenForm: boolean) => ChangeOpennessForm, \r\n  createTodo: (todo: ITodo) => CreateTodo;\r\n}\r\n\r\nconst FormTodo: React.FC<FormTodoProps> = ({ \r\n  values, \r\n  isOpenForm,\r\n  todos,\r\n  changeValuesForm, \r\n  changeOpennessForm, \r\n  createTodo,\r\n}) => {\r\n  const { title } = values;\r\n  \r\n  const submitHandler = (event: React.FormEvent<HTMLFormElement>): void => {\r\n    event.preventDefault();\r\n    if (!title.trim()) return;\r\n    const newTodo = { title, isComplete: false, key: generate() };\r\n\r\n    createTodo(newTodo);\r\n    changeValuesForm({...values, title: ''});\r\n    changeOpennessForm(!isOpenForm);\r\n\r\n    localStore.set('myTodos', [ ...todos, newTodo]);\r\n  };\r\n\r\n  const changeHandler = (event: React.ChangeEvent<HTMLInputElement>): void => {\r\n    changeValuesForm({...values, title: event.target.value});\r\n  };\r\n\r\n  const changeOpennessFormHandler = () => {\r\n    changeOpennessForm(!isOpenForm);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <FormTodoStyled\r\n        onSubmit={submitHandler}\r\n        isOpen={isOpenForm}\r\n      >\r\n        <h2>Create new todo</h2>\r\n        <input \r\n          placeholder=\"Title\"\r\n          type=\"text\" \r\n          name=\"title\"\r\n          value={title}\r\n          onChange={changeHandler}\r\n        />\r\n        <button type=\"submit\">submit</button>\r\n      </FormTodoStyled>\r\n      <BtnOpenForm onClick={changeOpennessFormHandler} >\r\n        <span className=\"visually-hidden\">Button for open form</span>\r\n      </BtnOpenForm>     \r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ( state: AppStore ) => ({\r\n  values: state.UI.UI.form.values,\r\n  isOpenForm: state.UI.UI.form.isOpenForm,\r\n  todos: state.todos.todos,\r\n});\r\nconst mapDispatchToProps = {\r\n  changeValuesForm,\r\n  changeOpennessForm,\r\n  createTodo\r\n};\r\n\r\nexport default connect( mapStateToProps, mapDispatchToProps )(FormTodo);\r\n\r\n\r\n\r\nconst BtnOpenForm = styled.button`\r\n  position: fixed;\r\n  z-index: 6;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  width: 50px;\r\n  height: 50px;  \r\n  background: #61c7b9;\r\n  cursor: pointer;\r\n  &:active {\r\n    background: #49a094;\r\n  }\r\n  &::before, \r\n  &::after {\r\n    content: '';\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    width: 4px;\r\n    border-radius: 5px;\r\n    height: 25px;\r\n    background-color: #000;\r\n    transition: all 0.3s;\r\n  }\r\n`;\r\n\r\nconst FormTodoStyled = styled.form<{ isOpen: boolean }>`\r\n  width: 100%;\r\n  bottom: 60px;\r\n  left: 0px;\r\n  position: fixed;\r\n  height: ${({isOpen}) => isOpen ? '200px': '0px'};\r\n  padding: ${({isOpen}) => isOpen ? '20px 20px': '0px 20px'};\r\n  overflow: hidden;\r\n  background-color: #61c7b9;\r\n  transition: all 0.3s;\r\n  font-size: 20px;\r\n  font-family: serif;\r\n  &+${BtnOpenForm} {\r\n    border: 1px solid ${({isOpen}) => isOpen ? '#49a094'  : '#61c7b9'};\r\n    bottom: 39px;\r\n    border-top: none;\r\n    border-bottom-width: 2px;\r\n    border-radius: 50%;\r\n    &::before {\r\n      transform: ${({isOpen}) => isOpen ? 'translate( -50%, -50% ) rotate(-45deg)' : 'translate( -50%, -50% )'};\r\n    }\r\n    &::after {\r\n      transform: ${({isOpen}) => isOpen ? 'translate( -50%, -50% ) rotate(45deg)' : 'translate( -50%, -50% ) rotate(90deg)'};\r\n    }\r\n  }\r\n  & input,\r\n  & button {\r\n    border-radius: 3px;\r\n    width: calc(100% - 10px);\r\n    padding: 10px;\r\n  }\r\n  & input {\r\n    height: 50px;\r\n    margin-bottom: 15px;\r\n  }  \r\n  & h2 {\r\n    font-size: 24px;\r\n    text-align: center;\r\n    margin-bottom: 10px;\r\n  }  \r\n`;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport styled from 'styled-components';\r\n\r\nimport { AppStore } from '../store/store';\r\nimport { ChangeActiveBurger } from '../interfaces/interfaces';\r\nimport { changeActiveBurger } from '../store/actions';\r\n\r\n\r\ninterface BurgerProps {\r\n  isActiveBurger: boolean;\r\n  changeActiveBurger: (isActiveBurger: boolean) => ChangeActiveBurger;\r\n}\r\n\r\nconst Burger: React.FC<BurgerProps> = ({ isActiveBurger, changeActiveBurger}) => {\r\n\r\n  const clickHandler = () => {\r\n    changeActiveBurger(!isActiveBurger);\r\n  };\r\n  \r\n  return (\r\n    <BurgerMenuStyled isActive={isActiveBurger} onClick={clickHandler}>\r\n      <SpanStyled key={0} />\r\n      <SpanStyled key={1} />\r\n      <SpanStyled key={2} />\r\n    </BurgerMenuStyled>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ( state: AppStore ) => ({\r\n  isActiveBurger: state.UI.UI.isActiveBurger\r\n});\r\nconst mapDispatchToProps = {\r\n  changeActiveBurger\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Burger);\r\n\r\n\r\nconst SpanStyled = styled.span`\r\n  position: relative;\r\n  height: 5px;\r\n  background: rgba(25, 25, 25, 0.9);\r\n  color: transparent;\r\n  cursor: pointer;\r\n  display: block; \r\n  margin-bottom: 10px;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst BurgerMenuStyled = styled.div<{isActive: boolean}>`\r\n  position: absolute;\r\n  z-index: 6;\r\n  top: ${({isActive}) => isActive ? '65px'  : '0px'};\r\n  right: 0;\r\n  width: 65px;\r\n  height: 65px;\r\n  padding: 15px;\r\n  font-family: serif;\r\n  background: transparent;\r\n  /* border: 1px solid #61c7b9; */\r\n  transform-origin: 100% 0;\r\n  transform: ${({isActive}) => isActive ?\r\n  'translate(0px, 0px) rotate(90deg)'  : 'translate(0px, 0px) rotate(0deg)'};\r\n  transition: ${({isActive}) => isActive ?\r\n  'transform 0.2s 0.0s, top 0.2s 0.2s'  : 'transform 0.2s 0.2s, top 0.2s 0.0s'};\r\n  ${ SpanStyled } {\r\n    &:nth-child(1),\r\n    &:nth-child(3) {\r\n      width: ${({isActive}) => isActive ? '22px'  : '34px'};\r\n      left: ${({isActive}) => isActive ? '12px'  : '0px'};\r\n      top: ${({isActive}) => isActive ? '15px'  : '0px'};\r\n      transform: ${({isActive}) => isActive ? 'rotate(45deg)'  : 'rotate(0deg)'};\r\n      transform-origin: 100% 100%;\r\n      transition: ${({isActive}) => isActive ?\r\n  'transform 0.2s 0.2s, top 0.2s 0.0s'  : 'transform 0.2s 0.0s, top 0.2s 0.2s'};\r\n    }\r\n    &:nth-child(3) {\r\n      top: ${({isActive}) => isActive ? '-15px'  : '0px'};\r\n      transform: ${({isActive}) => isActive ? 'rotate(-45deg)'  : 'rotate(0deg)'};\r\n      transform-origin: 100% 0%;\r\n\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport styled from 'styled-components';\r\n\r\nimport { AppStore } from '../store/store';\r\nimport { ChangeActiveBurger } from '../interfaces/interfaces';\r\nimport { changeActiveBurger } from '../store/actions';\r\n\r\ninterface NavProps {\r\n  isActiveBurger: boolean;\r\n  changeActiveBurger: (isActiveBurger: boolean) => ChangeActiveBurger;\r\n}\r\n\r\nconst Nav: React.FC<NavProps> = ({ isActiveBurger, changeActiveBurger }) => {\r\n  \r\n  const navPages = [\r\n    {item: 'Notes', path: '/', key: 1},\r\n    {item: 'My ToDos', path: '/todo', key: 0},\r\n    {item: 'About', path: '/about', key: 2},\r\n  ];\r\n\r\n  const handleClick = (): void => {\r\n    changeActiveBurger(!isActiveBurger);\r\n  };\r\n\r\n  return (\r\n    <NavStyled isActive={isActiveBurger}>\r\n      {\r\n        navPages.map(({ item, path, key }) => (\r\n          <NavItem  onClick={handleClick} key={key} >\r\n            <NavLink to={path} >{ item }</NavLink>\r\n          </NavItem>\r\n        ))\r\n      }\r\n    </NavStyled>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ( state: AppStore ) => ({\r\n  isActiveBurger: state.UI.UI.isActiveBurger\r\n});\r\n\r\nexport default connect(mapStateToProps, {changeActiveBurger})(Nav);\r\n\r\n\r\nconst NavItem = styled.li`\r\n  width: 240px;\r\n  height: 60px;\r\n  position: relative;  \r\n  text-align: center;\r\n  font-weight: 600;\r\n  margin: 0 auto;\r\n  cursor: pointer;\r\n  &::before,\r\n  &::after {\r\n    content: '';\r\n    position: absolute;\r\n    width: 18px;\r\n    height: 3px;\r\n    top: 30px;\r\n    left: 0px;\r\n    border-radius: 5px;\r\n    background-color: #000;\r\n  }\r\n  &::after {\r\n    left: calc(100% - 18px);\r\n  }\r\n  &:hover {\r\n    &::before,\r\n    &::after {      \r\n      background-color: rgb(238, 238, 238);\r\n    }\r\n  }\r\n  &:active {\r\n    background: rgba(0, 0, 0, 0.3);\r\n  }\r\n`;\r\n\r\nconst NavStyled = styled.ul<{ isActive: boolean }>`\r\n  width: 100%;\r\n  bottom: 60px;\r\n  left: 0px;\r\n  position: fixed;\r\n  z-index: 5;\r\n  height: ${({isActive}) => isActive ? 'calc(100% - 60px)': '0px'};\r\n  padding: ${({isActive}) => isActive ? '150px 20px': '0px 20px'};\r\n  overflow: hidden;\r\n  background-color: #61c7b9;\r\n  transition: ${({isActive}) => isActive ?\r\n  'all 0.2s 0.1s'  : 'all 0.2s 0.0s'};\r\n  font-size: 20px;\r\n  font-family: serif;\r\n\r\n  &>${NavItem} {\r\n    transform: ${({isActive}) => isActive ? 'rotate(0deg)': 'rotate(80deg)'};\r\n    margin-bottom: ${({isActive}) => isActive ? '40px': '0px'};\r\n    right: ${({isActive}) => isActive ? '0px': 'calc(-100% + 160px)'};\r\n    font-size: ${({isActive}) => isActive ? '32px': '5px'};\r\n    width: ${({isActive}) => isActive ? '240px': '18px'};\r\n    height: ${({isActive}) => isActive ? '60px': '5px'};\r\n    line-height: ${({isActive}) => isActive ? '60px': '5px'};\r\n    transition: ${({isActive}) => isActive ? 'all 0.2s 0.1s'  : 'all 0.2s 0.0s'};\r\n    &::before,\r\n    &::after {\r\n      top: ${({isActive}) => isActive ? '30px': '2px'};\r\n      transition: ${({isActive}) => isActive ? 'all 0.2s 0.1s'  : 'all 0.2s 0.0s'};\r\n    }\r\n  }  \r\n`;\r\n","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nimport FormNote from './FormNote';\r\nimport FormToDo from './FormToDo';\r\nimport Burger from './Burger';\r\nimport Menu from './Nav';\r\n\r\nconst UserInterface: React.FC = () => \r\n  <UserInterfaceStyled>\r\n    <Burger />\r\n    <Menu />\r\n    <Switch>\r\n      <Route component={FormNote} path='/' exact/>\r\n      <Route component={FormToDo} path='/todo' />\r\n    </Switch>\r\n  </UserInterfaceStyled>;\r\n\r\nexport default UserInterface;\r\n\r\nconst UserInterfaceStyled = styled.div`\r\n  position: fixed;\r\n  bottom: 0px;\r\n  left: 0px;\r\n  width: 100%;\r\n  height: 65px;\r\n  background-color: #61c7b9;\r\n  z-index: 2;\r\n`;","import React from 'react';\r\nimport { generate } from 'shortid';\r\n\r\n\r\nconst saveLineBreakTabs:((content: string, isSaveLineBreakTabs: boolean) => JSX.Element | JSX.Element[]) = ( content: string, isSaveLineBreakTabs: boolean ) => {\r\n  if (isSaveLineBreakTabs) {    \r\n    const contentSLBWS = content.split('\\n');\r\n    if (contentSLBWS.length < 2) return <p>{content}</p>;\r\n    return contentSLBWS.map((line, i) => {\r\n      const words = line.split('  ');\r\n      const key = generate();\r\n      return (\r\n        <p key={key}>\r\n          {words.map((word) => (\r\n            <span key={generate()}>\r\n              {word}\r\n              <i>&nbsp;&nbsp;</i>\r\n            </span>\r\n          ))}\r\n        </p>\r\n      );\r\n    });\r\n  }\r\n\r\n  return <p>{content}</p>;\r\n};\r\n\r\nexport default saveLineBreakTabs;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport styled from 'styled-components';\r\n\r\nimport { AppStore } from '../store/store';\r\nimport saveLineBreakTabs  from '../helpers/saveLineBreakTabs';\r\nimport { DeleteNote, INote } from '../interfaces/interfaces';\r\nimport { deleteNote } from '../store/actions';\r\nimport localStore from '../helpers/localStore';\r\n\r\n\r\ninterface NotesProps {\r\n  notes: INote[];\r\n  deleteNote: (key: string) => DeleteNote;\r\n}\r\n\r\nconst Notes: React.FC<NotesProps> = ({ notes, deleteNote }) => {\r\n\r\n  const handleDelete = (key: string) => () => {\r\n    deleteNote(key);\r\n    localStore.set('myNotes', [...notes].filter((note: INote) => note.key !== key));\r\n  };\r\n\r\n  const Content = ({content, isSaveLineBreakTabs}: {content: string; isSaveLineBreakTabs: boolean;}): JSX.Element => (\r\n    <>\r\n      { saveLineBreakTabs( content, isSaveLineBreakTabs ) }\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {!notes.length && (\r\n        <NoteStyled>\r\n          <h2>No notes</h2>\r\n          <p>Your note list is empty yet</p>\r\n        </NoteStyled>\r\n      )}\r\n\r\n      {notes.map(\r\n        ({ \r\n          title, \r\n          content, \r\n          key,\r\n          isSaveLineBreakTabs \r\n        }) => \r\n          <NoteStyled key={key} >\r\n            <h2>{title}</h2>\r\n            <Content content={content} isSaveLineBreakTabs={isSaveLineBreakTabs}/>\r\n            <BtnDelNote onClick={handleDelete(key)}/>\r\n          </NoteStyled>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ( state: AppStore ) => ({\r\n  notes: state.notes.notes\r\n});\r\nconst mapDispatchToProps = {\r\n  deleteNote,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Notes);\r\n\r\n\r\nconst NoteStyled = styled.div`\r\n  position: relative;\r\n  top: 0;\r\n  left: 0;\r\n  flex: 1 1 auto;\r\n  padding: 10px;\r\n  border: 2px solid #adadad;\r\n  margin-right: 10px;\r\n  margin-bottom: 10px;\r\n  border-radius: 6px;\r\n  font-family: serif;\r\n  display: flex;\r\n  flex-flow: wrap column;\r\n  & h2 {\r\n    margin-bottom: 10px;\r\n    font-size: 22px;\r\n    font-weight: 500;\r\n    color: rgba(0, 0, 0, 0.9);\r\n    text-shadow: 0 2px 6px rgba(0, 0, 0, 0.5);\r\n    box-shadow: 0 6px 6px -6px rgba(0, 0, 0, 0.5);\r\n    border-bottom: 2px solid rgba(0, 0, 0, 0.5);\r\n    padding-bottom: 6px;\r\n  }\r\n  & p {\r\n    font-size: 16px;\r\n    font-weight: 400;\r\n    width: 100%;\r\n    height: auto;\r\n    color: #383737;\r\n    text-shadow: 0 0 8px rgba(0, 0, 0, 0.5);\r\n  }\r\n`;\r\n\r\nconst BtnDelNote = styled.button`\r\n  width: 30px;\r\n  height: 30px;\r\n  position: absolute;\r\n  top: 0px;\r\n  right: 0px;\r\n  background: rgba(255, 255, 255, 0);\r\n  cursor: pointer;\r\n  &::before,\r\n  &::after {\r\n    content: '';\r\n    position: absolute;\r\n    width:22px;\r\n    height: 3px;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate( -50%, -50% ) rotate(-45deg);\r\n    border-radius: 5px;\r\n    background-color: #c31f1f;\r\n  }\r\n  &::after {\r\n    transform: translate( -50%, -50% ) rotate(45deg);\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport styled from 'styled-components';\r\n\r\nimport { AppStore } from '../store/store';\r\nimport { DeleteTodo, CompleteTodo, ITodo } from '../interfaces/interfaces';\r\nimport { deleteTodo, completeTodo } from '../store/actions';\r\nimport localStore from '../helpers/localStore';\r\n\r\n\r\ninterface NotesProps {\r\n  todos: ITodo[];\r\n  deleteTodo: (key: string) => DeleteTodo;\r\n  completeTodo: (key: string) => CompleteTodo;\r\n}\r\n\r\nconst ToDoList: React.FC<NotesProps> = ({ todos, deleteTodo, completeTodo }) => {\r\n\r\n  const changeHandler = (key: string) => () => {\r\n    completeTodo(key);\r\n    localStore.set('myTodos', [...todos].map((todo: ITodo) => todo.key === key ? { ...todo, isComplete: !todo.isComplete } : todo));\r\n  };\r\n\r\n  const handleDelete = (key: string) => () => {\r\n    deleteTodo(key);\r\n    localStore.set('myTodos', [...todos].filter((todo: ITodo) => todo.key !== key));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!todos.length && (\r\n        <TodoStyled>\r\n          <h2>No todos</h2>\r\n          <p>Your todo list is empty yet</p>\r\n        </TodoStyled>\r\n      )}\r\n\r\n      {todos.map(\r\n        ({ \r\n          title, \r\n          key,\r\n          isComplete\r\n        }) => \r\n          <TodoStyled isComplete={isComplete} key={key} >\r\n            <CompleteCheckbox \r\n              type='checkbox' \r\n              name=\"isComplete\" \r\n              checked={isComplete}\r\n              onChange={changeHandler(key)} \r\n            />\r\n            <TitleStyled> {title} </TitleStyled>\r\n            <BtnDelNote onClick={handleDelete(key)}/>\r\n          </TodoStyled>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ( state: AppStore ) => ({\r\n  todos: state.todos.todos\r\n});\r\nconst mapDispatchToProps = {\r\n  deleteTodo,\r\n  completeTodo\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ToDoList);\r\n\r\nconst CompleteCheckbox = styled.input`\r\n  width: 35px;\r\n  height: 35px;\r\n  top: 2px;\r\n  left: -10px;\r\n  position: relative;\r\n`;\r\n\r\nconst TitleStyled = styled.h2``;\r\n\r\nconst TodoStyled = styled.div<{ isComplete?: boolean }>`\r\n  position: relative;\r\n  width: calc(100% - 12px);\r\n  display: flex;\r\n  top: 0;\r\n  left: 0;\r\n  margin-bottom: 10px;\r\n  font-family: serif;\r\n  border-bottom: 1px solid rgb(185, 185, 185);\r\n  & ${TitleStyled} {\r\n    text-decoration: ${({isComplete}) => isComplete ? 'line-through' : 'none'};\r\n    font-size: 18px;\r\n    font-weight: 500;\r\n    height: 32px;\r\n    line-height: 38px;\r\n    width: calc(100% - 77px);\r\n    color: ${({isComplete}) => isComplete ? 'rgba(0, 0, 0, 0.5)' : 'rgba(0, 0, 0, 0.9)'};\r\n    overflow: auto hidden;\r\n    white-space: nowrap;\r\n    -webkit-overflow-scrolling: touch;\r\n    &::-webkit-scrollbar {\r\n      display: none;\r\n    }\r\n  }\r\n`;\r\n\r\nconst BtnDelNote = styled.button`\r\n  width: 35px;\r\n  height: 35px;\r\n  border: 1px solid rgb(185, 185, 185);\r\n  border-radius: 3px;\r\n  position: absolute;\r\n  top: 1px;\r\n  right: -2px;\r\n  background: rgba(255, 255, 255, 0);\r\n  cursor: pointer;\r\n  &::before,\r\n  &::after {\r\n    content: '';\r\n    position: absolute;\r\n    width:26px;\r\n    height: 3px;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate( -50%, -50% ) rotate(-45deg);\r\n    border-radius: 5px;\r\n    background-color: #c31f1f;\r\n  }\r\n  &::after {\r\n    transform: translate( -50%, -50% ) rotate(45deg);\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst About: React.FC = () => \r\n  <AboutStyled>\r\n    <InfoStyled> Information about this App! </InfoStyled>\r\n    <InfoStyled> Information about this App? </InfoStyled>\r\n    <InfoStyled> Information about this App$ </InfoStyled>\r\n  </AboutStyled>;\r\n\r\nexport default About;\r\n\r\nconst InfoStyled = styled.p`\r\n  margin-bottom: 20px;\r\n  font-size: 26px;\r\n  font-weight: 500;\r\n  color: rgba(0, 0, 0, 0.9);\r\n  text-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);\r\n  box-shadow: 0 6px 6px -6px rgba(0, 0, 0, 0.5);\r\n  border-bottom: 2px solid rgba(0, 0, 0, 0.5);\r\n  padding-bottom: 6px;\r\n`;\r\n\r\nconst AboutStyled = styled.div`\r\n  padding: 20px 0;\r\n`;\r\n","import React from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nimport UserInterface from './components/UserInterface';\r\nimport Notes from './components/Notes';\r\nimport ToDoList from './components/ToDoList';\r\nimport About from './components/About';\r\n\r\n\r\nconst App: React.FC = () => { \r\n\r\n  return (\r\n    <BrowserRouter>      \r\n      <AppStyled >\r\n        <UserInterface />\r\n        \r\n        <SwitchStyled>\r\n            <Route component={Notes} path='/' exact />           \r\n            <Route component={ToDoList} path='/todo' />           \r\n            <Route component={About} path='/about' />           \r\n        </SwitchStyled>\r\n      </AppStyled>          \r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default App;\r\n\r\nconst AppStyled = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: #ffffff;\r\n  padding: 14px 10px 78px 20px;\r\n  display: flex;\r\n  flex-flow: wrap;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n  \r\n`;\r\n\r\nconst SwitchStyled = styled(Switch)`\r\n  width: 100%;\r\n  overflow: auto;\r\n  display: flex;\r\n  flex-flow: wrap column;\r\n  justify-content: flex-start;\r\n  align-items: flex-start;\r\n`;\r\n\r\n","import { \r\n  CREATE_NOTE, \r\n  DELETE_NOTE, \r\n  CREATE_TODO, \r\n  DELETE_TODO, \r\n  CHANGE_VALUES_FORM, \r\n  CHANGE_OPENNESS_FORM, \r\n  CHANGE_ACTIVE_BURGER, \r\n  COMPLETE_TODO} from './types';\r\n\r\nimport { DefaultState, NoteActions, UIActions, INote, ITodo, TodoActions } from '../interfaces/interfaces';\r\nimport localStore from '../helpers/localStore';\r\n\r\nconst localNotes = localStore.get('myNotes') || [];\r\nconst localTodos = localStore.get('myTodos') || [];\r\n\r\nconst initialState: DefaultState = {\r\n  UI: {\r\n    isActiveBurger: false,\r\n    form: {\r\n      values: {\r\n        title: '',\r\n        content: '',\r\n        isSaveLineBreakTabs: false,\r\n      },\r\n      isOpenForm: false,\r\n    }\r\n  },\r\n  notes: [...localNotes],\r\n  todos: [...localTodos]\r\n};\r\n  \r\nexport const notesReducer = (state: DefaultState = initialState, action: NoteActions): DefaultState => {\r\n  switch (action.type) {\r\n    case CREATE_NOTE:\r\n      return { ...state, notes: [...state.notes, action.payload] };\r\n    case DELETE_NOTE:\r\n      return { ...state, notes: [...state.notes ].filter((note: INote) => note.key !== action.payload) };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport const todosReducer = (state: DefaultState = initialState, action: TodoActions): DefaultState => {\r\n  switch (action.type) {\r\n    case CREATE_TODO:\r\n      return { ...state, todos: [...state.todos, action.payload] };\r\n    case COMPLETE_TODO:\r\n      return { ...state, todos: [...state.todos ].map((todo: ITodo) => todo.key === action.payload ? { ...todo, isComplete: !todo.isComplete } : todo) };\r\n    case DELETE_TODO:\r\n      return { ...state, todos: [...state.todos ].filter((todo: ITodo) => todo.key !== action.payload) };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport const UIReducer = (state: DefaultState = initialState, action: UIActions): DefaultState => {\r\n  switch (action.type) {\r\n    case CHANGE_VALUES_FORM:\r\n      return { ...state, UI: { ...state.UI, form: { ...state.UI.form, values: action.payload }}};\r\n    case CHANGE_OPENNESS_FORM:\r\n      return { ...state, UI: { ...state.UI, form: { ...state.UI.form, isOpenForm: action.payload }}};\r\n    case CHANGE_ACTIVE_BURGER:\r\n      return { ...state, UI: { ...state.UI, isActiveBurger: action.payload} };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { createStore, combineReducers } from 'redux';\r\n// import thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nimport { UIReducer, notesReducer, todosReducer } from './reducers';\r\n// import formReducer from './formReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  notes: notesReducer,\r\n  todos: todosReducer,\r\n  UI: UIReducer,\r\n});\r\n\r\nexport type AppStore = ReturnType<typeof rootReducer>\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools());\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './store/store';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}